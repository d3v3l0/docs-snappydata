---
title: Using SnappyData Service for PKS
owner: Partners
---

<strong><%= modified_date %></strong>

This topic describes how to interact with a SnappyData cluster on PKS which is exposed via Kubernetes services, connect to it using JDBC driver and how to submit SnappyData jobs. 
		

##<a id='interacting'></a> Interact with SnappyData Cluster on PKS

SnappyData Helm chart creates services that allow you to make JDBC connections to and execute SnappyData jobs on the cluster. It also allows you to access SnappyData Pulse - it's dashboard UI.
Services of the type LoadBalancer have external IP address assigned and can be used to connect from outside of PKS cluster.

<a id= output> </a>To check the services created for SnappyData deployment, use command `kubectl get svc --namespace=snappy`. The following output is displayed:


```
NAME                        TYPE           CLUSTER-IP      EXTERNAL-IP      PORT(S)                                        AGE
snappydata-leader           ClusterIP      None            <none>           5050/TCP                                       5m
snappydata-leader-public    LoadBalancer   10.51.255.175   35.232.102.51    5050:31964/TCP,8090:32700/TCP,3768:32575/TCP   5m
snappydata-locator          ClusterIP      None            <none>           10334/TCP,1527/TCP                             5m
snappydata-locator-public   LoadBalancer   10.51.241.224   104.198.47.162   1527:31957/TCP                                 5m
snappydata-server           ClusterIP      None            <none>           1527/TCP                                       5m
snappydata-server-public    LoadBalancer   10.51.248.27    35.232.16.4      1527:31853/TCP                                 5m

```

In the above output, three services namely **snappydata-leader-public**, **snappydata-locator-public** and **snappydata-server-public** of type **LoadBalancer** are created.
These services have external IP addresses assigned and therefore can be accessed from outside PKS cluster.
The remaining services that do not have external IP addresses are those that are created for internal use.

+   **snappydata-leader-public** service exposes port **5050** for SnappyData Pulse and port **8090** to accept SnappyData jobs.
+   **snappydata-locator-public** service exposes port **1527** to accept JDBC connections.


You can do the following on the SnappyData cluster that is deployed on PKS cluster:

- [Connect to SnappyData using JDBC Driver](#jdbckubernetes)

- [Submit SnappyData Jobs](#jobkubernetes)

##<a id='jdbckubernetes'></a> Connect using JDBC Driver

For PKS deployments, JDBC clients can connect to SnappyData cluster using the JDBC URL that is derived from the **snappydata-locator-public** service.

**To connect to SnappyData using JDBC driver in PKS:**

1.	Check the SnappyData services running in PKS cluster.</br>
`kubectl get svc --namespace=snappy`</br>

From the output displayed, look for the external IP address of the *snappydata-locator-public* service and the port number (1527) for external connections.

        ```
        NAME                        TYPE           CLUSTER-IP      EXTERNAL-IP      PORT(S)                                        AGE
        snappydata-leader           ClusterIP      None            <none>           5050/TCP                                       5m
        snappydata-leader-public    LoadBalancer   10.51.255.175   35.232.102.51    5050:31964/TCP,8090:32700/TCP,3768:32575/TCP   5m
        snappydata-locator          ClusterIP      None            <none>           10334/TCP,1527/TCP                             5m
        snappydata-locator-public   LoadBalancer   10.51.241.224   104.198.47.162   1527:31957/TCP                                 5m
        snappydata-server           ClusterIP      None            <none>           1527/TCP                                       5m
        snappydata-server-public    LoadBalancer   10.51.248.27    35.232.16.4      1527:31853/TCP                                 5m

        ```

2.	Form the JDBC URL from this information. For example, based on the above output, the JDBC URL to be used will be `jdbc:snappydata://104.198.47.162:1527/`.
	Use this JDBC URL in your application to connect to SnappyData cluster as JDBC client.

You can refer to [SnappyData documentation](http://snappydatainc.github.io/snappydata/howto/connect_using_jdbc_driver/)
 for an example of JDBC program and for instructions on how to obtain JDBC driver using Maven/SBT co-ordinates.


##<a id='jobkubernetes'></a> Submit SnappyData Jobs

Refer to the [How Tos section](http://snappydatainc.github.io/snappydata/howto/run_spark_job_inside_cluster/) in SnappyData documentation to understand how to submit SnappyData jobs.

However, for submitting a SnappyData job in PKS deployment, you need to use the **snappydata-leader-public** service that exposes port **8090** to run the jobs.

**To submit a SnappyData job in PKS deployment:**

1.	Check the SnappyData services running in PKS cluster.</br>`kubectl get svc --namespace=snappy`</br>

        ```
        # check the SnappyData services running in K8S cluster
        kubectl get svc --namespace=snappy
        # This will show output like following

        NAME                        TYPE           CLUSTER-IP      EXTERNAL-IP      PORT(S)                                        AGE
        snappydata-leader           ClusterIP      None            <none>           5050/TCP                                       5m
        snappydata-leader-public    LoadBalancer   10.51.255.175   35.232.102.51    5050:31964/TCP,8090:32700/TCP,3768:32575/TCP   5m
        snappydata-locator          ClusterIP      None            <none>           10334/TCP,1527/TCP                             5m
        snappydata-locator-public   LoadBalancer   10.51.241.224   104.198.47.162   1527:31957/TCP                                 5m
        snappydata-server           ClusterIP      None            <none>           1527/TCP                                       5m
        snappydata-server-public    LoadBalancer   10.51.248.27    35.232.16.4      1527:31853/TCP                                 5m
        ```

	From the output displayed, note the external IP address of **snappydata-leader-public** service and port number (8090).

2.	You'll need to have SnappyData distribution on your local work environment from where you wish to submit SnappyData jobs.
	Change to SnappyData product installation directory.

3.	Submit the job using the external IP of the **snappydata-leader-public** service and the port number **8090** in the **--lead** option.</br> Following is an example of submitting a SnappyData Job:

        ```
        bin/snappy-job.sh submit
        --app-name CreatePartitionedRowTable
          --class org.apache.spark.examples.snappydata.CreatePartitionedRowTable
          --app-jar examples/jars/quickstart.jar
          --lead 35.232.102.51:8090
        ```
       

